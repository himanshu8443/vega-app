name: Nightly Build

on:
  schedule:
    # Runs at 2:00 AM UTC
    - cron: '0 2 * * *'
  # Optional: Allow manual trigger
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'

jobs:
  build-android:
    runs-on: ubuntu-latest
    # Use the nightly environment with the required secrets
    environment: nightly
    # This ensures the workflow only runs on the specified branch for scheduled runs
    if: github.event_name != 'schedule' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout specific branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'main' }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      
      # Decode the keystore from your secret
      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
          # Verify the keystore was created properly
          ls -la android/app/release.keystore
      
      # Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x android/gradlew
      
      # Use EXACT property names in gradle.properties and absolute path for keystore
      - name: Setup gradle properties
        run: |
          # Use absolute path to ensure the keystore is found
          KEYSTORE_PATH=$(realpath android/app/release.keystore)
          
          # Append to existing gradle.properties file (don't overwrite it)
          echo "MYAPP_UPLOAD_STORE_FILE=$KEYSTORE_PATH" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties
      
      # Show the content of gradle.properties for debugging
      - name: Verify gradle.properties
        run: |
          echo "Content of gradle.properties (with secrets redacted):"
          cat android/gradle.properties | sed 's/\(password\|PASSWORD\)=.*/\1=****/'
      
      # Verify the keystore
      - name: Verify keystore
        run: |
          echo "Keystore details:"
          keytool -list -v -keystore android/app/release.keystore -storepass "${{ secrets.KEYSTORE_PASSWORD }}" | head -20
      
      # Build with release configuration and verbose logging
      - name: Build Android App
        run: |
          cd android
          ./gradlew assembleRelease --stacktrace --debug
      
      # Upload APK as artifact for download with date in name
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Vega-Release-APK-$(date +'%Y%m%d')
          path: android/app/build/outputs/apk/release/*.apk
          if-no-files-found: warn
